// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sumpb/sum.proto

/*
Package sum is a generated protocol buffer package.

It is generated from these files:
	sumpb/sum.proto

It has these top-level messages:
	Request
	SumRequest
	SumResponse
*/
package sum

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	FirstNumber  int64 `protobuf:"varint,1,opt,name=first_number,json=firstNumber" json:"first_number,omitempty"`
	SecondNumber int64 `protobuf:"varint,2,opt,name=second_number,json=secondNumber" json:"second_number,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetFirstNumber() int64 {
	if m != nil {
		return m.FirstNumber
	}
	return 0
}

func (m *Request) GetSecondNumber() int64 {
	if m != nil {
		return m.SecondNumber
	}
	return 0
}

type SumRequest struct {
	Req *Request `protobuf:"bytes,1,opt,name=req" json:"req,omitempty"`
}

func (m *SumRequest) Reset()                    { *m = SumRequest{} }
func (m *SumRequest) String() string            { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()               {}
func (*SumRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SumRequest) GetReq() *Request {
	if m != nil {
		return m.Req
	}
	return nil
}

type SumResponse struct {
	Response int64 `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
}

func (m *SumResponse) Reset()                    { *m = SumResponse{} }
func (m *SumResponse) String() string            { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()               {}
func (*SumResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SumResponse) GetResponse() int64 {
	if m != nil {
		return m.Response
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "sum.Request")
	proto.RegisterType((*SumRequest)(nil), "sum.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "sum.SumResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SumService service

type SumServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
}

type sumServiceClient struct {
	cc *grpc.ClientConn
}

func NewSumServiceClient(cc *grpc.ClientConn) SumServiceClient {
	return &sumServiceClient{cc}
}

func (c *sumServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := grpc.Invoke(ctx, "/sum.SumService/Sum", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SumService service

type SumServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
}

func RegisterSumServiceServer(s *grpc.Server, srv SumServiceServer) {
	s.RegisterService(&_SumService_serviceDesc, srv)
}

func _SumService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.SumService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sum.SumService",
	HandlerType: (*SumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _SumService_Sum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sumpb/sum.proto",
}

func init() { proto.RegisterFile("sumpb/sum.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0xc1, 0xae, 0x82, 0x30,
	0x10, 0x45, 0x1f, 0xaf, 0x89, 0x9a, 0x01, 0x83, 0xe9, 0xca, 0xb0, 0x30, 0x5a, 0x37, 0x6a, 0x0c,
	0x26, 0xb8, 0xf1, 0x2b, 0x4c, 0x84, 0x0f, 0x30, 0x01, 0xc7, 0x84, 0x45, 0x29, 0x74, 0xa8, 0xdf,
	0x6f, 0x18, 0x40, 0x76, 0xed, 0x9d, 0xd3, 0x73, 0x3b, 0x10, 0x92, 0xd3, 0x75, 0x7e, 0x21, 0xa7,
	0xe3, 0xda, 0x9a, 0xd6, 0x48, 0x41, 0x4e, 0xab, 0x07, 0xcc, 0x53, 0x6c, 0x1c, 0x52, 0x2b, 0x77,
	0x10, 0xbc, 0x4b, 0x4b, 0xed, 0xb3, 0x72, 0x3a, 0x47, 0xbb, 0xf6, 0xb6, 0xde, 0x41, 0xa4, 0x3e,
	0x67, 0x77, 0x8e, 0xe4, 0x1e, 0x96, 0x84, 0x85, 0xa9, 0x5e, 0x23, 0xf3, 0xcf, 0x4c, 0xd0, 0x87,
	0x3d, 0xa4, 0xce, 0x00, 0x99, 0xd3, 0xa3, 0x75, 0x03, 0xc2, 0x62, 0xc3, 0x32, 0x3f, 0x09, 0xe2,
	0xae, 0x7e, 0x18, 0xa5, 0xdd, 0x40, 0x1d, 0xc1, 0x67, 0x9a, 0x6a, 0x53, 0x11, 0xca, 0x08, 0x16,
	0x76, 0x38, 0x0f, 0x1f, 0xf8, 0xdd, 0x93, 0x1b, 0x8b, 0x33, 0xb4, 0x9f, 0xb2, 0x40, 0x79, 0x02,
	0x91, 0x39, 0x2d, 0x43, 0x56, 0x4e, 0x85, 0xd1, 0x6a, 0x0a, 0xfa, 0x77, 0xea, 0x2f, 0x9f, 0xf1,
	0xc6, 0xd7, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x21, 0x2b, 0x56, 0x22, 0x04, 0x01, 0x00, 0x00,
}
